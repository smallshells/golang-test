package learnpackage

// -------------- 包 ----------------
/*
	包是多个Go源码的集合，是一种高级的代码复用方案，Go语言为我们提供了很多内置包，如 fmt 、 os 、io等
	我们可以根据自己的需要创建自己的包。一个包可以简单的理解为一个存放 .go 文件的文件夹。该文件夹下面的
	所有go文件都要在代码的第一行添加如下代码，声明该文件归属的包。
		package 包名
		注意：
			一个文件夹下面直接包含的文件只能归属一个 package ，同一个 package 的文件不能再多个文件夹下
			包名可以不和文件夹的名字一样，包名不能包含 - 符号
			包名为 main 的包为应用程序的入口包，这种包编译后会得到一个可执行文件，而编译不包含 main 包的源代码则不会得到可执行文件
	可见性：
		包中的引用另一个包里的标识符（变量、常量、类型、函数等）时，该标识符必须是对外可见的。
		在Go语言中只需要将标识符的首字母大写就可以让标识符对外可见。
	包的导入：
		import "包的路径"
		注意事项：
			import导入语句通常放在文件开头包声明语句的下面。
			导入的包名需要使用双引号包裹起来。
			包名是从 $GOPATH/src/ 后开始计算的，使用 / 进行路径分隔。
			Go语言中禁止循环导入包。
	自定义包：
		import 别名 "包的路径"
	匿名导入包：只希望导入包，而不使用包内部的数据时。
		import _ "包的路径"
	init()初始化函数：
		在Go语言程序执行时导入包语句会自动触发包内部init()函数的调用。init()函数没有参数也没有返回值。
		包中init()函数的执行时机：  全局声明 ==> init() ==> main()
	inti()函数执行顺序：
		在嵌套导入包中：最后被导入的包先执行init()函数
*/