package learntype

import "fmt"

//--------------字符串定义-------------
/*
	Go语言中的字符串以原生数据类型出现，使用字符串就像使用其他原生数据类型（int,bool,float32,float64）一样。
	Go语言里的字符串的内部实现使用 UTF-8 编码。
	Go语言中字符串必须是双引号 "" 包裹的，可以在Go语言的源码中直接添加非ASCII码字符。
	Go语言中定义多行字符串用 `` (键盘ESC下面的键)
	Go语言中单引号包裹的是字符！！！如：
	c1 := 'h'
	c2 := '1'
	c3 := '林'
	1个字符 'h' 占1个字节（1字节=8Bit（8个二进制位））
	1个UTF-8编码的汉字 '林' 一般占3个字节
*/

//-----------------字符串转义字符--------------
/*
	Go语言的字符串常见转义字符包含回车、换行、单双引号、制表符等，如下表示：
	\r  回车符（返回行首）
	\n  换行符（直接跳到下一行的同列位置）
	\t  制表符
	\'  单引号
	\"  双引号
	\\  反斜杠
*/

func PrintType06() {
	//用转义字符打印路径
	path1 := "\"C:\\Users\\Administrator\\go\""
	fmt.Println(path1)

	//双引号中的单引号不用转义
	ok := " I'm Ok!"
	fmt.Println(ok)

	//定义多行字符串,原样输出不用转义，比如上面的路径就可以
	path2 := `C:\\Users\\Administrator\\go`

	poem := `
		读书破万卷
		下笔如有神
	`
	fmt.Println(poem, path2)
}
